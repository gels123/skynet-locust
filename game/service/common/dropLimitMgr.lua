---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Administrator.
--- DateTime: 2023/3/7 9:27
---
local skynet = require("skynet")
local svrFunc = require("svrFunc")
local playerDataLib = require("playerDataLib")
local commonCenter = require("commonCenter"):shareInstance()
local dropLimitMgr = class("dropLimitMgr")

function dropLimitMgr:ctor()
    self.module = "droplimitinfo"	    -- 数据表名
    self.data = nil		                -- 数据
end

-- 数据id
function dropLimitMgr:dataId()
    return tonumber(string.format("%s%s", commonCenter.kid, commonCenter.idx))
end

-- 默认数据
function dropLimitMgr:defaultData()
    return {}
end

-- 初始化
function dropLimitMgr:init()
    self.data = self:queryDB()
    if "table" ~= type(self.data) then
        self.data = self:defaultData()
        self:updateDB()
    end
end

-- 查询数据库
function dropLimitMgr:queryDB()
    assert(self.module, "tradeMgr:queryDB error!")
    return playerDataLib:query(commonCenter.kid, self:dataId(), self.module)
end

-- 更新数据库
function dropLimitMgr:updateDB()
    local data = self:getDataDB()
    assert(self.module and data, "tradeMgr:updateDB error!")
    playerDataLib:sendUpdate(commonCenter.kid, self:dataId(), self.module, data)
end

function dropLimitMgr:checkDropLimit(itemId,cnt,limit)
    if limit <= 0 then
        return cnt
    end
    if cnt <= 0 then
        return 0
    end
    local old = self.data[itemId] or 0
    local new = old + cnt
    if new > limit then
        new = limit
    end
    self.data[itemId] = new
    self:updateDB()

    return new - old
end

-- 获取存库数据
function dropLimitMgr:getDataDB()
    return self.data
end

return dropLimitMgr